/*
    File:    mur128m_scaner_keyword_table.cpp
    Author:  Chikmarev Ilya
*/

#include "../include/mur128m_scaner_keyword_table.h"

namespace mur128m_scanner{
  const trans_table::Elem<Lexem_code> keywords_jump_table[] = {
    {const_cast<char32_t*>(U"p"),     Lexem_code::Id,            1}, // 0: b
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegBp,       0}, // 1: bp

    {const_cast<char32_t*>(U"bdn"),   Lexem_code::Id,            3}, // 2: a...
    {const_cast<char32_t*>(U"s"),     Lexem_code::Id,            6}, // 3: ab...
    {const_cast<char32_t*>(U"d"),     Lexem_code::Id,            7}, // 4: ad...
    {const_cast<char32_t*>(U"d"),     Lexem_code::Id,            8}, // 5: an...
    {const_cast<char32_t*>(U"f"),     Lexem_code::Id,            9}, // 6: abs...
    {const_cast<char32_t*>(U"fi"),    Lexem_code::Id,           11}, // 7: add...
    {const_cast<char32_t*>(U"n"),     Lexem_code::KwAnd,        12}, // 8: and
    {const_cast<char32_t*>(U""),      Lexem_code::KwAbsf,        0}, // 9: absf
    {const_cast<char32_t*>(U""),      Lexem_code::KwAddf,        0}, // 10: addf
    {const_cast<char32_t*>(U""),      Lexem_code::KwAddi,        0}, // 11: addi
    {const_cast<char32_t*>(U""),      Lexem_code::KwAndn,        0}, // 12: andn

    {const_cast<char32_t*>(U"ahmo"),  Lexem_code::Id,           14}, // 13: c...
    {const_cast<char32_t*>(U"l"),     Lexem_code::Id,           18}, // 14: ca...
    {const_cast<char32_t*>(U"as"),    Lexem_code::Id,           19}, // 15: ch...
    {const_cast<char32_t*>(U"p"),     Lexem_code::Id,           21}, // 16: cm...
    {const_cast<char32_t*>(U"m"),     Lexem_code::Id,           22}, // 17: co...
    {const_cast<char32_t*>(U"l"),     Lexem_code::Id,           23}, // 18: cal...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          	24}, // 19: cha...
    {const_cast<char32_t*>(U"f"),     Lexem_code::Id,           25}, // 20: chs...
    {const_cast<char32_t*>(U"fi"),    Lexem_code::Id,           26}, // 21: cmp...
    {const_cast<char32_t*>(U"p"),     Lexem_code::Id,           28}, // 22: com...
    {const_cast<char32_t*>(U"srzgnlp"),Lexem_code::KwCall,      29}, // 23: call...
    {const_cast<char32_t*>(U""),      Lexem_code::KwChar,        0}, // 24: char
    {const_cast<char32_t*>(U""),      Lexem_code::KwChfs,        0}, // 25: chfs
    {const_cast<char32_t*>(U""),      Lexem_code::KwCmpf,        0}, // 26: cmpf
    {const_cast<char32_t*>(U"su"),    Lexem_code::Id,           36}, // 27: cmpi...
    {const_cast<char32_t*>(U"l"),     Lexem_code::Id,           38}, // 28: comp...
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwCalls,      39}, // 29: calls...
    {const_cast<char32_t*>(U""),      Lexem_code::KwCallr,      0}, // 30: callr
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwCallz,      40}, // 31: callz...
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,           41}, // 32: callg...
    {const_cast<char32_t*>(U"z"),     Lexem_code::Id,           42}, // 33: calln...
    {const_cast<char32_t*>(U"e"),     Lexem_code::KwCalln,      43}, // 34: calll...
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwCallp,      44}, // 35: callp...
    {const_cast<char32_t*>(U""),      Lexem_code::Id,            0}, // 36: cmpiu
    {const_cast<char32_t*>(U""),      Lexem_code::Id,            0}, // 37: cmpis
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,           45}, // 38: compl...
    {const_cast<char32_t*>(U""),      Lexem_code::KwCallsr,      0}, // 39: callsr
    {const_cast<char32_t*>(U""),      Lexem_code::KwCallzr,      0}, // 40: callzr
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwCallge,     46}, // 41: callge...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,           47}, // 42: callnz...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,           48}, // 43: callle...
    {const_cast<char32_t*>(U""),      Lexem_code::KwCallpr,      0}, // 44: callpr
    {const_cast<char32_t*>(U"x"),     Lexem_code::Id,           49}, // 45: comple...
    {const_cast<char32_t*>(U""),      Lexem_code::KwCallger,     0}, // 46: callger
    {const_cast<char32_t*>(U""),      Lexem_code::KwCallnzr,     0}, // 47: callnzr
    {const_cast<char32_t*>(U""),      Lexem_code::KwCalller,     0}, // 48: calller
    {const_cast<char32_t*>(U"1368"),  Lexem_code::Id,           50}, // 49: complex...
    {const_cast<char32_t*>(U"2"),     Lexem_code::Id,           54}, // 50: complex1...
    {const_cast<char32_t*>(U"2"),     Lexem_code::Id,           55}, // 51: complex3...
    {const_cast<char32_t*>(U"4"),     Lexem_code::Id,           56}, // 52: complex6...
    {const_cast<char32_t*>(U"0"),     Lexem_code::Id,           57}, // 53: complex8...
    {const_cast<char32_t*>(U"8"),     Lexem_code::Id,           58}, // 54: complex12..
    {const_cast<char32_t*>(U""),      Lexem_code::KwComplex32,   0}, // 55: complex32
    {const_cast<char32_t*>(U""),      Lexem_code::KwComplex64,   0}, // 56: complex64
    {const_cast<char32_t*>(U""),      Lexem_code::KwComplex80,   0}, // 57: complex80
    {const_cast<char32_t*>(U""),      Lexem_code::KwComplex128,  0}, // 58: complex128


    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,           60}, // 59: d...
    {const_cast<char32_t*>(U"v"),     Lexem_code::Id,           61}, // 60: di...
    {const_cast<char32_t*>(U"fim"),   Lexem_code::Id,           62}, // 61: div...
    {const_cast<char32_t*>(U""),      Lexem_code::KwDivf,        0}, // 62: divf
    {const_cast<char32_t*>(U"su"),    Lexem_code::Id,           65}, // 63: divi...
    {const_cast<char32_t*>(U"o"),     Lexem_code::Id,           67}, // 64: divm...
    {const_cast<char32_t*>(U""),      Lexem_code::KwDivis,      0}, // 65: divis
    {const_cast<char32_t*>(U""),      Lexem_code::KwDiviu,      0}, // 66: diviu
    {const_cast<char32_t*>(U"d"),     Lexem_code::Id,           68}, // 67: divmo...
    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,           69}, // 68: divmod...
    {const_cast<char32_t*>(U"su"),    Lexem_code::Id,           70}, // 69: divmodi...
    {const_cast<char32_t*>(U""),      Lexem_code::KwDivmodis,    0}, // 70: divmodis
    {const_cast<char32_t*>(U""),      Lexem_code::KwDivmodiu,    0}, // 71: divmodiu

    {const_cast<char32_t*>(U"lor0123456789"),   Lexem_code::Id, 73}, // 72: f...
    {const_cast<char32_t*>(U"do"),    Lexem_code::Id,           86}, // 73: fl...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,           93}, // 74: fo...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,           94}, // 75: fr...
	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF0,           0}, // 76: f0
 	{const_cast<char32_t*>(U"0123456789"),     Lexem_code::KwRegF1,  107}, // 77: f1...
 	{const_cast<char32_t*>(U"0123456789"),     Lexem_code::KwRegF2,  115}, // 78: f2...
 	{const_cast<char32_t*>(U"01"),     Lexem_code::KwRegF3,          125}, // 79: f3...
 	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF4,           0}, // 80: f4
 	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF5,           0}, // 81: f5
 	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF6,           0}, // 82: f6
 	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF7,           0}, // 83: f7
 	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF8,           0}, // 84: f8
 	{const_cast<char32_t*>(U""),     Lexem_code::KwRegF9,           0}, // 85: f9
    {const_cast<char32_t*>(U"z1"),    Lexem_code::Id,           90}, // 86: fld...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,           92}, // 87: flo...
    {const_cast<char32_t*>(U"m"),     Lexem_code::Id,           93}, // 88: for...
    {const_cast<char32_t*>(U"c"),     Lexem_code::Id,            0}, // 89: fra...
    {const_cast<char32_t*>(U""),      Lexem_code::KwFld1,        0}, // 90: fld1
    {const_cast<char32_t*>(U""),      Lexem_code::KwFldz,        0}, // 91: fldz
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,           85}, // 92: floa...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,           86}, // 93: form...
    {const_cast<char32_t*>(U""),      Lexem_code::KwFrac,        0}, // 94: frac
    {const_cast<char32_t*>(U"1368"),  Lexem_code::Id,           97}, // 95: float...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,           101}, // 96: forma...
    {const_cast<char32_t*>(U"2"),     Lexem_code::Id,           102}, // 97: float1...
    {const_cast<char32_t*>(U"2"),     Lexem_code::Id,           103}, // 98: float3...
    {const_cast<char32_t*>(U"4"),     Lexem_code::Id,    	      104}, // 99: float6...
    {const_cast<char32_t*>(U"0"),     Lexem_code::Id,          	105}, // 100: float8...
    {const_cast<char32_t*>(U""),      Lexem_code::KwFormat,      0}, // 101: format
    {const_cast<char32_t*>(U"8"),     Lexem_code::Id,           106}, // 102: float12...
    {const_cast<char32_t*>(U""),      Lexem_code::KwFloat32,     0}, // 103: float32
    {const_cast<char32_t*>(U""),      Lexem_code::KwFloat64,     0}, // 104: float64
    {const_cast<char32_t*>(U""),      Lexem_code::KwFloat80,     0}, // 105: float80
    {const_cast<char32_t*>(U""),      Lexem_code::KwFloat128,    0}, // 106: float128
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF10,      0}, // 107: f10
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF11,      0}, // 108: f11
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF12,      0}, // 109: f12
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF13,      0}, // 110: f13
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF14,      0}, // 111: f14
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF15,    0}, // 112: f15
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF16,    0}, // 113: f16
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF17,    0}, // 114: f17
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF18,    0}, // 115: f18
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF19,    0}, // 116: f19
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF20,    0}, // 117: f20
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF21,    0}, // 118: f21
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF22,    0}, // 119: f22
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF23,    0}, // 120: f23
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF24,    0}, // 121: f24
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF25,    0}, // 122: f25
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF26,    0}, // 123: f26
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF27,    0}, // 124: f27
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF28,    0}, // 125: f28
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF29,    0}, // 126: f29
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF30,    0}, // 127: f30
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegF31,    0}, // 128: f31

    {const_cast<char32_t*>(U"m"),     Lexem_code::Id,           130}, // 129: j...
    {const_cast<char32_t*>(U"p"),     Lexem_code::Id,           131}, // 130: jm...
    {const_cast<char32_t*>(U"glnprsz"),Lexem_code::KwJmp,   132}, // 131: jmp...
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,          139}, // 132: jmpg...
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,          140}, // 133: jmpl...
    {const_cast<char32_t*>(U"z"),     Lexem_code::Id,          141}, // 134: jmpn...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          142}, // 135: jmpp...
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmpr,        0}, // 136: jmpr
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          143}, // 137: jmps...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          144}, // 138: jmpz...
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwJmpge,     145}, // 139: jmpge...
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwJmple,     146}, // 140: jmple...
    {const_cast<char32_t*>(U"r"),     Lexem_code::KwJmpnz,     147}, // 141: jmpnz...
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmppr,       0}, // 141: jmppr
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmpsr,       0}, // 143: jmpsr
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmpzr,       0}, // 144: jmpzr
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmpger,      0}, // 145: jmpger
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmpler,      0}, // 146: jmpler
    {const_cast<char32_t*>(U""),      Lexem_code::KwJmpnzr,      0}, // 147: jmpnzr

    {const_cast<char32_t*>(U"n"),     Lexem_code::Id,          149}, // 148: i...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,          150}, // 149: in...
    {const_cast<char32_t*>(U"8136"),  Lexem_code::Id,          151}, // 150: int...
    {const_cast<char32_t*>(U""),      Lexem_code::KwInt8,        0}, // 151: int8
    {const_cast<char32_t*>(U"26"),    Lexem_code::Id,          155}, // 152: int1...
    {const_cast<char32_t*>(U"2"),     Lexem_code::Id,          157}, // 153: int3...
    {const_cast<char32_t*>(U"4"),     Lexem_code::Id,          158}, // 154: int6...
    {const_cast<char32_t*>(U"8"),     Lexem_code::Id,          159}, // 155: int12...
    {const_cast<char32_t*>(U""),      Lexem_code::KwInt16,       0}, // 156: int16
    {const_cast<char32_t*>(U""),      Lexem_code::KwInt32,       0}, // 157: int32
    {const_cast<char32_t*>(U""),      Lexem_code::KwInt64,       0}, // 158: int64
    {const_cast<char32_t*>(U""),      Lexem_code::KwInt128,      0}, // 159: int128

    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,          161}, // 160: u...
    {const_cast<char32_t*>(U"n"),     Lexem_code::Id,          162}, // 161: ui...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,          163}, // 162: uin...
    {const_cast<char32_t*>(U"8136"),  Lexem_code::Id,          165}, // 163: uint...
    {const_cast<char32_t*>(U""),      Lexem_code::KwUInt8,       0}, // 164: uint8
    {const_cast<char32_t*>(U"26"),    Lexem_code::Id,          168}, // 165: uint1...
    {const_cast<char32_t*>(U"2"),     Lexem_code::Id,          170}, // 166: uint3...
    {const_cast<char32_t*>(U"4"),     Lexem_code::Id,          171}, // 167: uint6...
    {const_cast<char32_t*>(U"8"),     Lexem_code::Id,          172}, // 168: uint12...
    {const_cast<char32_t*>(U""),      Lexem_code::KwUInt16,      0}, // 169: uint16
    {const_cast<char32_t*>(U""),      Lexem_code::KwUInt32,      0}, // 170: uint32
    {const_cast<char32_t*>(U""),      Lexem_code::KwUInt64,      0}, // 171: uint64
    {const_cast<char32_t*>(U""),      Lexem_code::KwUInt128,     0}, // 172: uint128

    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          174}, // 173: o...
    {const_cast<char32_t*>(U"n"),     Lexem_code::KwOr,        175}, // 174: or...
    {const_cast<char32_t*>(U""),      Lexem_code::KwOrn,         0}, // 175: orn...

    {const_cast<char32_t*>(U"o"),     Lexem_code::Id,          177}, // 176: x...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          178}, // 177: xo...
    {const_cast<char32_t*>(U"n"),     Lexem_code::KwXor,       179}, // 178: xor...
    {const_cast<char32_t*>(U""),      Lexem_code::KwXorn,        0}, // 179: xorn...

    {const_cast<char32_t*>(U"s"),     Lexem_code::Id,          181}, // 180: l...
    {const_cast<char32_t*>(U"h"),     Lexem_code::Id,          182}, // 181: ls...
    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,          183}, // 182: lsh...
    {const_cast<char32_t*>(U"f"),     Lexem_code::Id,          184}, // 183: lshi...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,          185}, // 184: lshif...
    {const_cast<char32_t*>(U"s"),     Lexem_code::KwLshift,    186}, // 185: lshift...
    {const_cast<char32_t*>(U""),      Lexem_code::KwLshifts,     0}, // 186: lshifts

    {const_cast<char32_t*>(U"o"),     Lexem_code::Id,          188}, // 187: n...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,          189}, // 188: no...
    {const_cast<char32_t*>(U""),      Lexem_code::KwNot,         0}, // 189: not...

    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          191}, // 190: t...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,          192}, // 191: tr...
    {const_cast<char32_t*>(U"p"),     Lexem_code::Id,          193}, // 192: tra...
    {const_cast<char32_t*>(U""),      Lexem_code::KwTrap,        0}, // 193: trap

    {const_cast<char32_t*>(U"eos0"),   Lexem_code::Id,          195}, // 194: r...
    {const_cast<char32_t*>(U"ta"),    Lexem_code::Id,          208}, // 195: re...
    {const_cast<char32_t*>(U"u"),     Lexem_code::Id,          220}, // 196: ro...
    {const_cast<char32_t*>(U"h"),     Lexem_code::Id,          221}, // 197: rs...
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR0,           0}, // 198: r0
   	{const_cast<char32_t*>(U"0123456789"),     Lexem_code::KwRegR1,  246}, // 199: r1...
   	{const_cast<char32_t*>(U"0123456789"),     Lexem_code::KwRegR2,  256}, // 200: r2...
   	{const_cast<char32_t*>(U"01"),     Lexem_code::KwRegR3,          266}, // 201: r3...
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR4,           0}, // 202: r4
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR5,           0}, // 203: r5
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR6,           0}, // 204: r6
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR7,           0}, // 205: r7
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR8,           0}, // 206: r8
    {const_cast<char32_t*>(U""),     Lexem_code::KwRegR9,           0}, // 207: r9
    {const_cast<char32_t*>(U"zgilnspa"),Lexem_code::Id,        213}, // 208: ret...
    {const_cast<char32_t*>(U"d"),     Lexem_code::Id,          219}, // 209: rea...
    {const_cast<char32_t*>(U"n"),     Lexem_code::Id,          220}, // 210: rou...
    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,          221}, // 211: rsh...
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetz,        0}, // 212: retz
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,          222}, // 213: retg...
    {const_cast<char32_t*>(U""),      Lexem_code::KwReti,        0}, // 214: reti
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetl,        0}, // 215: retl
    {const_cast<char32_t*>(U"z"),     Lexem_code::KwRetn,      223}, // 216: retn...
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetp,        0}, // 217: retp
    {const_cast<char32_t*>(U"gipln"), Lexem_code::Id,          224}, // 218: reta...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,          230}, // 219: read...
    {const_cast<char32_t*>(U"d"),     Lexem_code::Id,          231}, // 220: roun...
    {const_cast<char32_t*>(U"f"),     Lexem_code::Id,          232}, // 221: rshi...
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetge,       0}, // 222: retge
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetnz,       0}, // 223: retnz...
    {const_cast<char32_t*>(U"e"),     Lexem_code::KwRetag,     192}, // 224: retag..
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetai,       0}, // 225: retai
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetap,       0}, // 226: retap
    {const_cast<char32_t*>(U"e"),     Lexem_code::KwRetal,     235}, // 227: retal...
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetaz,       0}, // 228: retaz
    {const_cast<char32_t*>(U"z"),     Lexem_code::KwRetan,     236}, // 229: retan...
    {const_cast<char32_t*>(U"b"),     Lexem_code::Id,          237}, // 230: reada...
    {const_cast<char32_t*>(U"glnt"),  Lexem_code::Id,          238}, // 231: round...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,            0}, // 232: rshif...
    {const_cast<char32_t*>(U""),      Lexem_code::KwRets,        0}, // 233: rets
    {const_cast<char32_t*>(U""),      Lexem_code::KwRege,        0}, // 234: retge
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetale,      0}, // 235: retale
    {const_cast<char32_t*>(U""),      Lexem_code::KwRetanz,      0}, // 236: retanz
    {const_cast<char32_t*>(U"l"),     Lexem_code::Id,          245}, // 237: readab..
    {const_cast<char32_t*>(U""),      Lexem_code::KwRoundg,      0}, // 238: roundg
    {const_cast<char32_t*>(U""),      Lexem_code::KwRoundn,      0}, // 239: roundn
    {const_cast<char32_t*>(U""),      Lexem_code::KwRoundl,      0}, // 240: roundl
    {const_cast<char32_t*>(U""),      Lexem_code::KwRoundt,      0}, // 241: roundt
    {const_cast<char32_t*>(U"s"),     Lexem_code::KwRshift,    244}, // 242: rshift
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,          245}, // 243: readable
    {const_cast<char32_t*>(U""),      Lexem_code::KwRshifts,     0}, // 244: rshifts
    {const_cast<char32_t*>(U""),      Lexem_code::KwReadable,    0}, // 245: readable
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR10,      0}, // 246: f10
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR11,      0}, // 247: f11
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR12,      0}, // 248: f12
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR13,      0}, // 249: f13
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR14,      0}, // 250: f14
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR15,    0}, // 251: f15
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR16,    0}, // 252: f16
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR17,    0}, // 253: f17
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR18,    0}, // 254: f18
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR19,    0}, // 255: f19
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR20,    0}, // 256: f20
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR21,    0}, // 257: f21
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR22,    0}, // 258: f22
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR23,    0}, // 259: f23
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR24,    0}, // 260: f24
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR25,    0}, // 261: f25
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR26,    0}, // 262: f26
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR27,    0}, // 263: f27
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR28,    0}, // 264: f28
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR29,    0}, // 265: f29
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR30,    0}, // 266: f30
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegR31,    0}, // 267: f31

    {const_cast<char32_t*>(U"etp"),    Lexem_code::Id,          269}, // 268: s...
    {const_cast<char32_t*>(U"c"),     Lexem_code::Id,           272}, // 269: se...
    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,           273}, // 270: st...
    {const_cast<char32_t*>(U""),      Lexem_code::KwRegSp,       0}, // 271: sp
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,           274}, // 272: sec...
    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,           275}, // 273: str...
    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,           276}, // 274: sect...
    {const_cast<char32_t*>(U"n"),     Lexem_code::Id,           277}, // 275: stri...
    {const_cast<char32_t*>(U"o"),     Lexem_code::Id,           278}, // 276: secti...
    {const_cast<char32_t*>(U"g"),     Lexem_code::Id,           279}, // 277: strin...
    {const_cast<char32_t*>(U"n"),     Lexem_code::Id,           280}, // 278: sectio...
    {const_cast<char32_t*>(U""),      Lexem_code::KwString,      0}, // 279: string
    {const_cast<char32_t*>(U""),      Lexem_code::KwSection,     0}, // 280: section

    {const_cast<char32_t*>(U"uo"),    Lexem_code::Id,          282}, // 281: p...
    {const_cast<char32_t*>(U"s"),     Lexem_code::Id,          284}, // 282: pu...
    {const_cast<char32_t*>(U"p"),     Lexem_code::Id,          285}, // 283: po...
    {const_cast<char32_t*>(U"h"),     Lexem_code::Id,          286}, // 284: pus...
    {const_cast<char32_t*>(U""),      Lexem_code::KwPop,         0}, // 285: pop
    {const_cast<char32_t*>(U""),      Lexem_code::KwPush,        0}, // 286: push

    {const_cast<char32_t*>(U"x"),     Lexem_code::Id,          288}, // 287: e...
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,          289}, // 288: ex...
    {const_cast<char32_t*>(U"c"),     Lexem_code::Id,          290}, // 289: exe...
    {const_cast<char32_t*>(U"u"),     Lexem_code::Id,          291}, // 290: exec...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,          292}, // 291: execu...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,          293}, // 292: execut...
    {const_cast<char32_t*>(U"b"),     Lexem_code::Id,          294}, // 293: executa...
    {const_cast<char32_t*>(U"l"),     Lexem_code::Id,          295}, // 294: executab...
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id, 	       296}, // 295: executabl...
    {const_cast<char32_t*>(U""),      Lexem_code::KwExecutable,  0}, // 296: executable

    {const_cast<char32_t*>(U"r"),     Lexem_code::Id,          298}, // 297: w...
    {const_cast<char32_t*>(U"i"),     Lexem_code::Id,          299}, // 298: wr...
    {const_cast<char32_t*>(U"t"),     Lexem_code::Id,          300}, // 299: wri...
    {const_cast<char32_t*>(U"a"),     Lexem_code::Id,          301}, // 300: writ...
    {const_cast<char32_t*>(U"b"),     Lexem_code::Id,          302}, // 301: writa...
    {const_cast<char32_t*>(U"l"),     Lexem_code::Id,          303}, // 302: writab...
    {const_cast<char32_t*>(U"e"),     Lexem_code::Id,          304}, // 303: writabl...
    {const_cast<char32_t*>(U""),      Lexem_code::KwWritable,    0}, // 304: writable

    /*{const_cast<char32_t*>(U"ou"),   Lexem_code::Id,           201}, // 196: m
    {const_cast<char32_t*>(U"v"),   Lexem_code::Id,           202}, // 197: m
    {const_cast<char32_t*>(U"l"),   Lexem_code::Id,           203}, // 198: m
    {const_cast<char32_t*>(U"1368us"),   Lexem_code::Id,           204}, // 199: m
    {const_cast<char32_t*>(U"2i"),   Lexem_code::Id,           205}, // 200: m
    {const_cast<char32_t*>(U"6"),   Lexem_code::Id,           206}, // 201: m
    {const_cast<char32_t*>(U"2"),   Lexem_code::Id,           207}, // 202: m
    {const_cast<char32_t*>(U"4"),   Lexem_code::Id,           208}, // 203: m
    {const_cast<char32_t*>(U"0us"),   Lexem_code::Id,           209}, // 204: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 205: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 206: m
    {const_cast<char32_t*>(U"f"),   Lexem_code::Id,           212}, // 207: m
    {const_cast<char32_t*>(U"us"),   Lexem_code::Id,           213}, // 208: m
    {const_cast<char32_t*>(U"us"),   Lexem_code::Id,           214}, // 209: m
    {const_cast<char32_t*>(U"fus"),   Lexem_code::Id,           215}, // 210: m
    {const_cast<char32_t*>(U"fus"),   Lexem_code::Id,           216}, // 211: m
    {const_cast<char32_t*>(U"f"),   Lexem_code::Id,           217}, // 212: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 213: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 214: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 215: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 216: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 217: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 218: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 219: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 220: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 221: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 222: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 223: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 224: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,           0}, // 225: m
    {const_cast<char32_t*>(U""),   Lexem_code::Id,            0}, // 226: m*/

  };
};
